import { GameScore } from "../baseGame";
import { runGameTests } from "../util/testUtils";
import { Wordle } from "./wordle";

const sampleEvenRowWin = `
Wordle 123 2/6

â¬œðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©
ðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©
`;

const sampleOddRowWin = `
Wordle 123 3/6

â¬œðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©
â¬œðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©
ðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©
`;

const sampleNearWin = `
Wordle 123 X/6*

ðŸŸ¨â¬œðŸŸ©â¬œâ¬œ
â¬œðŸŸ¨ðŸŸ©â¬œâ¬œ
â¬œâ¬œðŸŸ©ðŸŸ¨â¬œ
â¬œðŸŸ¨ðŸŸ©â¬œðŸŸ©
â¬œðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©
â¬œðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ©
`;

const sampleLoss = `
Wordle 123 X/6*

ðŸŸ¨â¬›ðŸŸ©â¬›â¬›
â¬›ðŸŸ¨ðŸŸ©â¬›â¬›
â¬›â¬›ðŸŸ©ðŸŸ©â¬›
â¬›ðŸŸ©ðŸŸ©ðŸŸ©â¬›
â¬›ðŸŸ©ðŸŸ©ðŸŸ©â¬›
â¬›ðŸŸ©ðŸŸ©ðŸŸ©ðŸŸ¨
`;

describe("Wordle", () => {
  runGameTests(new Wordle(), [
    {
      name: "sampleEvenRowWin",
      input: sampleEvenRowWin,
      expectedScore: GameScore.Win,
      expectedOutput: sampleEvenRowWin.trim().replace(/â¬œ/gu, "â¬›"),
    },
    {
      name: "sampleOddRowWin",
      input: sampleOddRowWin,
      expectedScore: GameScore.Win,
      expectedOutput: sampleOddRowWin.trim().replace(/â¬œ/gu, "â¬›"),
    },
    {
      name: "sampleNearWin",
      input: sampleNearWin,
      expectedScore: GameScore.NearWin,
      expectedOutput: sampleNearWin.trim().replace(/â¬œ/gu, "â¬›"),
    },
    {
      name: "sampleLoss",
      input: sampleLoss,
      expectedScore: GameScore.Loss,
      expectedOutput: sampleLoss.trim().replace(/â¬œ/gu, "â¬›"),
    },
  ]);
});
