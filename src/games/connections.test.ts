import { GameScore } from "../baseGame";
import { runGameTests } from "../util/testUtils";
import { Connections } from "./connections";

const sampleLateWin = `
Connections
Puzzle #252
游릵游릳游릵游릴
游릳游릳游릳游릳
游릱游릴游릵游릱
游릱游릱游릱游릱
游릴游릵游릵游릴
游릴游릴游릴游릴
游릵游릵游릵游릵
`;

const sampleEarlyWin = `
Connections
Puzzle #252
游릳游릳游릳游릳
游릴游릴游릴游릴
游릱游릱游릱游릱
游릵游릵游릵游릵
`;

const sampleNearWin = `
Connections
Puzzle #252
游릳游릴游릵游릳
游릱游릱游릱游릱
游릳游릳游릴游릳
游릳游릳游릳游릳
游릴游릵游릴游릵
游릴游릴游릵游릴
`;

const sampleFakeNearWin = `
Connections
Puzzle #252
游릳游릴游릵游릳
游릱游릱游릱游릱
游릳游릳游릴游릳
游릳游릳游릳游릳
游릴游릵游릴游릵
游릴游릵游릵游릴
`;

const sampleLoss = `
Connections
Puzzle #252
游릳游릴游릵游릳
游릳游릴游릵游릱
游릴游릳游릵游릱
游릴游릳游릵游릱
`;

describe("Connections", () => {
  runGameTests(new Connections(), [
    {
      name: "sampleLateWin",
      input: sampleLateWin,
      expectedScore: GameScore.Win,
    },
    {
      name: "sampleEarlyWin",
      input: sampleEarlyWin,
      expectedScore: GameScore.Win,
    },
    {
      name: "sampleNearWin",
      input: sampleNearWin,
      expectedScore: GameScore.NearWin,
    },
    {
      name: "sampleFakeNearWin",
      input: sampleFakeNearWin,
      expectedScore: GameScore.Loss,
    },
    {
      name: "sampleLoss",
      input: sampleLoss,
      expectedScore: GameScore.Loss,
    },
  ]);
});
