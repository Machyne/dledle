import { emojiToNumber, numberToEmoji, splitEmoji, splitEmojiLines } from "./emoji";

describe("emoji helpers", () => {
  it("should correctly split arrow emojis", () => {
    expect(splitEmoji("üü©üü©üü©üü©‚¨õ‚¨áÔ∏è")).toEqual(["üü©", "üü©", "üü©", "üü©", "‚¨õ", "‚¨áÔ∏è"]);
  });

  it("should remove white space when splitting emojis", () => {
    expect(splitEmoji("üü©\nüü© üü© üü©      ‚¨õ\t\t‚¨áÔ∏è")).toEqual(["üü©", "üü©", "üü©", "üü©", "‚¨õ", "‚¨áÔ∏è"]);
  });

  it("should correctly split lines of emojis, ignore empty lines", () => {
    const input = `
    1Ô∏è‚É£üü©üü©üü©‚¨õ‚¨áÔ∏è

    üü©‚ùåüü©üü©‚¨õ‚¨áÔ∏è
    `;
    expect(splitEmojiLines(input)).toEqual([
      ["1Ô∏è‚É£", "üü©", "üü©", "üü©", "‚¨õ", "‚¨áÔ∏è"],
      ["üü©", "‚ùå", "üü©", "üü©", "‚¨õ", "‚¨áÔ∏è"],
    ]);
  });

  it("should correctly convert number emojis to numbers", () => {
    expect(emojiToNumber(splitEmoji("1Ô∏è‚É£2Ô∏è‚É£3Ô∏è‚É£"))).toEqual(123);
    expect(emojiToNumber(splitEmoji("9Ô∏è‚É£"))).toEqual(9);
  });

  it("should correctly convert numbers to number emojis", () => {
    expect(numberToEmoji(123)).toEqual("1Ô∏è‚É£2Ô∏è‚É£3Ô∏è‚É£");
    expect(numberToEmoji(0)).toEqual("0Ô∏è‚É£");
    expect(numberToEmoji(9000)).toEqual("9Ô∏è‚É£0Ô∏è‚É£0Ô∏è‚É£0Ô∏è‚É£");
    expect(numberToEmoji(0, 5)).toEqual("0Ô∏è‚É£0Ô∏è‚É£0Ô∏è‚É£0Ô∏è‚É£0Ô∏è‚É£");
    expect(numberToEmoji(8, 3)).toEqual("0Ô∏è‚É£0Ô∏è‚É£8Ô∏è‚É£");
  });
});
